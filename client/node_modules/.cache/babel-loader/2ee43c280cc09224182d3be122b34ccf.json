{"ast":null,"code":"import { initializeApp } from 'firebase/app';\nimport { getAuth, signInWithRedirect, signInWithPopup, GoogleAuthProvider, createUserWithEmailAndPassword, signInWithEmailAndPassword, signOut, onAuthStateChanged } from 'firebase/auth';\nimport { getFirestore, doc, getDoc, setDoc, collection, writeBatch, query, getDocs } from 'firebase/firestore';\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBc4TiVk1m0_h7bCqQ0K5RQMnpc4R5v2pU\",\n  authDomain: \"hua-clothing-db.firebaseapp.com\",\n  projectId: \"hua-clothing-db\",\n  storageBucket: \"hua-clothing-db.appspot.com\",\n  messagingSenderId: \"657692789500\",\n  appId: \"1:657692789500:web:e3cb643d2b815ae5156579\"\n};\nconst firebaseApp = initializeApp(firebaseConfig);\nconst googleProvider = new GoogleAuthProvider();\ngoogleProvider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const auth = getAuth();\nexport const signInWithGooglePopup = () => signInWithPopup(auth, googleProvider);\nexport const signInWithGoogleRedirect = () => signInWithRedirect(auth, googleProvider);\nexport const db = getFirestore();\nexport const createUserDocumentFromAuth = async function (userAuth) {\n  let additionalInformation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  if (!userAuth) return;\n  const userDocRef = doc(db, 'users', userAuth.uid);\n  const userSnapshot = await getDoc(userDocRef);\n\n  if (!userSnapshot.exists()) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await setDoc(userDocRef, {\n        displayName,\n        email,\n        createdAt,\n        ...additionalInformation\n      });\n    } catch (error) {\n      console.log('error creating the user', error.message);\n    }\n  }\n\n  return userDocRef;\n};\nexport const getCategoriesAndDocuments = async () => {\n  const collectionRef = collection(db, 'categories');\n  const q = query(collectionRef);\n  const querySnapshot = await getDocs(q);\n  const categoryMap = querySnapshot.docs.reduce((acc, docSnapshot) => {\n    const {\n      title,\n      items\n    } = docSnapshot.data();\n    acc[title.toLowerCase()] = items;\n    return acc;\n  }, {});\n  return categoryMap;\n};\nexport const addCollectionAndDocuments = async (collectionKey, objectsToAdd) => {\n  const batch = writeBatch(db);\n  const collectionRef = collection(db, collectionKey);\n  objectsToAdd.forEach(object => {\n    const docRef = doc(collectionRef, object.title.toLowerCase());\n    batch.set(docRef, object);\n  });\n  await batch.commit();\n  console.log('done');\n};\nexport const createAuthUserWithEmailAndPassword = async (email, password) => {\n  if (!email || !password) return;\n  return await createUserWithEmailAndPassword(auth, email, password);\n};\nexport const signInAuthUserWithEmailAndPassword = async (email, password) => {\n  if (!email || !password) return;\n  return await signInWithEmailAndPassword(auth, email, password);\n};\nexport const signOutUser = async () => await signOut(auth);\nexport const onAuthStateChangedListener = callback => onAuthStateChanged(auth, callback);","map":{"version":3,"sources":["/Users/conghua/Desktop/hua-clothing/src/utils/firebase/firebase.utils.js"],"names":["initializeApp","getAuth","signInWithRedirect","signInWithPopup","GoogleAuthProvider","createUserWithEmailAndPassword","signInWithEmailAndPassword","signOut","onAuthStateChanged","getFirestore","doc","getDoc","setDoc","collection","writeBatch","query","getDocs","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseApp","googleProvider","setCustomParameters","prompt","auth","signInWithGooglePopup","signInWithGoogleRedirect","db","createUserDocumentFromAuth","userAuth","additionalInformation","userDocRef","uid","userSnapshot","exists","displayName","email","createdAt","Date","error","console","log","message","getCategoriesAndDocuments","collectionRef","q","querySnapshot","categoryMap","docs","reduce","acc","docSnapshot","title","items","data","toLowerCase","addCollectionAndDocuments","collectionKey","objectsToAdd","batch","forEach","object","docRef","set","commit","createAuthUserWithEmailAndPassword","password","signInAuthUserWithEmailAndPassword","signOutUser","onAuthStateChangedListener","callback"],"mappings":"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","sourcesContent":["import { initializeApp } from 'firebase/app';\nimport { getAuth, signInWithRedirect, signInWithPopup, GoogleAuthProvider,\n  createUserWithEmailAndPassword, signInWithEmailAndPassword, signOut,\n  onAuthStateChanged,} from 'firebase/auth';\nimport { getFirestore, doc, getDoc, setDoc, collection,\n  writeBatch, query, getDocs,} from 'firebase/firestore';\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBc4TiVk1m0_h7bCqQ0K5RQMnpc4R5v2pU\",\n  authDomain: \"hua-clothing-db.firebaseapp.com\",\n  projectId: \"hua-clothing-db\",\n  storageBucket: \"hua-clothing-db.appspot.com\",\n  messagingSenderId: \"657692789500\",\n  appId: \"1:657692789500:web:e3cb643d2b815ae5156579\",\n};\n\nconst firebaseApp = initializeApp(firebaseConfig);\nconst googleProvider = new GoogleAuthProvider();\ngoogleProvider.setCustomParameters({prompt: 'select_account',});\n\nexport const auth = getAuth();\nexport const signInWithGooglePopup = () => signInWithPopup(auth, googleProvider);\nexport const signInWithGoogleRedirect = () => signInWithRedirect(auth, googleProvider);\nexport const db = getFirestore();\n\nexport const createUserDocumentFromAuth = async (userAuth, additionalInformation = {}) => {\n  if (!userAuth) return;\n  const userDocRef = doc(db, 'users', userAuth.uid);\n  const userSnapshot = await getDoc(userDocRef);\n  if (!userSnapshot.exists()) {\n    const { displayName, email } = userAuth;\n    const createdAt = new Date();\n    try {\n      await setDoc(userDocRef, {\n        displayName,\n        email,\n        createdAt,\n        ...additionalInformation,\n      });\n    } catch (error) {\n      console.log('error creating the user', error.message);\n    }\n  }\n  return userDocRef;\n};\n\nexport const getCategoriesAndDocuments = async () => {\n  const collectionRef = collection(db, 'categories');\n  const q = query(collectionRef);\n  const querySnapshot = await getDocs(q);\n  const categoryMap = querySnapshot.docs.reduce((acc, docSnapshot) => {\n    const { title, items } = docSnapshot.data();\n    acc[title.toLowerCase()] = items;\n    return acc;\n  }, {});\n  return categoryMap;\n};\n\nexport const addCollectionAndDocuments = async (collectionKey, objectsToAdd) => {\n  const batch = writeBatch(db);\n  const collectionRef = collection(db, collectionKey);\n\n  objectsToAdd.forEach((object) => {\n     const docRef = doc(collectionRef, object.title.toLowerCase());\n     batch.set(docRef, object);\n  });\n\n  await batch.commit();\n  console.log('done');\n};\n\nexport const createAuthUserWithEmailAndPassword = async (email, password) => {\n  if (!email || !password) return;\n  return await createUserWithEmailAndPassword(auth, email, password);\n};\n\nexport const signInAuthUserWithEmailAndPassword = async (email, password) => {\n  if (!email || !password) return;\n  return await signInWithEmailAndPassword(auth, email, password);\n};\n\nexport const signOutUser = async () => await signOut(auth);\n\nexport const onAuthStateChangedListener = (callback) =>\n  onAuthStateChanged(auth, callback);\n"]},"metadata":{},"sourceType":"module"}